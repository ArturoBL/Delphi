unit GridXML;

interface

uses
  cxGridDBTableView, IXMLData, XMLIntf;

type
  TGridXML = class
    private
      fSQL : string;
      fgtv : TcxGridDBTableView;
      function getXML: string;
    public
      property XML : string read getXML;
      constructor create(SQL : string; gtv : TcxGridDBTableView);
  end;

implementation

{ TGridXML }

constructor TGridXML.create(SQL: string; gtv: TcxGridDBTableView);
begin
  fsql := sql;
  fgtv := gtv;
end;

function TGridXML.getXML: string;
var
  d : tIxmldoc;

  Procedure CrearDoc;
  begin
    d := tixmldoc.Create('GridView');
  end;

  Procedure addSQL;
  begin
    d.addNode('SQL').Text := fsql;
  end;

  procedure addColumns;
  var
    i : integer;
    col : tcxgriddbcolumn;
    n,c : ixmlnode;
  begin
    n := d.addNode('Columns');
    for I := 0 to fgtv.ColumnCount - 1 do
    begin
      col := fgtv.columns[i];
      c := d.addNode(n,'Column');
      c.Attributes['fieldname'] := col.DataBinding.FieldName;
    end;
  end;
begin
  CrearDoc;
  addSQL;
  addColumns;
  result := d.XML;
  d.Free;
end;

end.
