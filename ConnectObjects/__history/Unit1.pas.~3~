unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, GR32_Image,gr32, GR32_VectorUtils, GR32_polygons, GR32_Geometry, GR32_layers;

type
  TForm1 = class(TForm)
    img: TImage32;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    lo : TArrayOfArrayOfFloatPoint;
    lp : array of tfloatpoint;
    c1,c2, ip1,ip2 : tfloatpoint;
    function centropoly(p : tarrayoffloatpoint) : tfloatpoint;
    procedure calcpolys;
    procedure draw;
    function LinePolyIntersect(p1,p2: tfloatpoint; poly : tarrayoffloatpoint; var p :tfloatpoint) : boolean;
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.calcpolys;
var
  i : integer;
begin
  for I := 0 to High(lo) do
    lo[i] :=  RoundRect(floatRect(lp[i], floatpoint(lp[i].X + 100, lp[i].Y + 50)), 20);
  c1 := centropoly(lo[0]);
  c2 := centropoly(lo[1]);
  LinePolyIntersect(c1,c2, lo[0], ip1);
  LinePolyIntersect(c1,c2, lo[1], ip2);
    //PolylineFS(img.Bitmap,Lo[i], clblack32, true);
end;

function TForm1.centropoly(p: tarrayoffloatpoint): tfloatpoint;
var
  i : integer;
  fx, fy : tfloat;
begin
  fx := 0; fy := 0;
  for i := 0 to High(p) do
  begin
    fx := fx + p[i].X;
    fy := fy + p[i].Y;
  end;
  result := floatpoint(fx/(high(p)+1),fy/(high(p)+1));
end;

procedure TForm1.draw;
var
  i : integer;
  l : tarrayoffloatpoint;
begin
  Img.Bitmap.FillRectS(Img.Bitmap.BoundsRect, clWhite32);

  PolylineFS(img.Bitmap,Lo[0], clblack32, true);
  PolylineFS(img.Bitmap,Lo[1], clblack32, true);
  l := BuildpolygonF([c1.X,c1.Y,c2.X,c2.Y]);
  PolylineFS(img.Bitmap,L, clblue32, true);

  PolylineFS(img.Bitmap,circle(ip1,5), clred32, true);
  PolylineFS(img.Bitmap,circle(ip2,5), clred32, true);
end;

procedure TForm1.FormCreate(Sender: TObject);
var
  i : integer;
begin
  img.Bitmap := tbitmap32.Create(img.Width, img.Height);

  setlength(lp,2);
  lp[0] := floatpoint(100, 100);
  lp[1] := floatpoint(450, 300);

  setlength(lo,high(lp)+1);
  calcpolys;
  draw;
end;

function TForm1.LinePolyIntersect(p1, p2: tfloatpoint; poly: tarrayoffloatpoint;
  var p: tfloatpoint): boolean;
var
  i : integer;
  pi,pf : tfloatpoint;
begin
  result := SegmentIntersect(p1, p2, poly[0], poly[high(poly)],p);

  if not result then
  for I := 1 to High(poly) do
  begin
    pi := poly[i-1];
    pf := poly[i];
    result := SegmentIntersect(p1, p2, pi, pf,p);
    if result then
      break;
  end;
end;

end.
